log4j, [2015-05-01T04:04:06.768]  INFO: org.elasticsearch.node: [logstash-55be1660645c-1-2010] version[1.1.1], pid[1], build[f1585f0/2014-04-16T14:27:12Z]
log4j, [2015-05-01T04:04:06.774]  INFO: org.elasticsearch.node: [logstash-55be1660645c-1-2010] initializing ...
log4j, [2015-05-01T04:04:06.806]  INFO: org.elasticsearch.plugins: [logstash-55be1660645c-1-2010] loaded [], sites []
log4j, [2015-05-01T04:04:11.919]  INFO: org.elasticsearch.node: [logstash-55be1660645c-1-2010] initialized
log4j, [2015-05-01T04:04:11.919]  INFO: org.elasticsearch.node: [logstash-55be1660645c-1-2010] starting ...
log4j, [2015-05-01T04:04:12.383]  INFO: org.elasticsearch.transport: [logstash-55be1660645c-1-2010] bound_address {inet[/0:0:0:0:0:0:0:0:9300]}, publish_address {inet[/172.17.0.202:9300]}
log4j, [2015-05-01T04:04:15.840]  INFO: org.elasticsearch.cluster.service: [logstash-55be1660645c-1-2010] detected_master [elasticsearch.domain.com][-2PIU8bxQF-fjnQErkHEoA][1b86857865e7][inet[/172.17.0.192:9300]], added {[elasticsearch.domain.com][-2PIU8bxQF-fjnQErkHEoA][1b86857865e7][inet[/172.17.0.192:9300]],}, reason: zen-disco-receive(from master [[elasticsearch.domain.com][-2PIU8bxQF-fjnQErkHEoA][1b86857865e7][inet[/172.17.0.192:9300]]])
log4j, [2015-05-01T04:04:15.876]  INFO: org.elasticsearch.discovery: [logstash-55be1660645c-1-2010] elasticsearch/4lnL9XDxSemuCizEKImKnQ
log4j, [2015-05-01T04:04:15.892]  INFO: org.elasticsearch.node: [logstash-55be1660645c-1-2010] started
{:timestamp=>"2015-05-01T04:04:04.977000+0000", :message=>"Using milestone 2 input plugin 'redis'. This plugin should be stable, but if you see strange behavior, please let us know! For more information on plugin milestones, see http://logstash.net/docs/1.4.2/plugin-milestones", :level=>:warn}
{:timestamp=>"2015-05-01T04:04:06.100000+0000", :message=>"Registering Redis", :identity=>"default", :level=>:info}
{:timestamp=>"2015-05-01T04:04:06.112000+0000", :message=>"Pipeline started", :level=>:info}
{:timestamp=>"2015-05-01T04:04:15.935000+0000", :message=>"New Elasticsearch output", :cluster=>nil, :host=>"elasticsearch", :port=>"9300-9305", :embedded=>false, :protocol=>"node", :level=>:info}
{:timestamp=>"2015-05-01T04:04:15.942000+0000", :message=>"Automatic template management enabled", :manage_template=>"true", :level=>:info}
{:timestamp=>"2015-05-01T04:04:15.946000+0000", :message=>"Using mapping template", :template=>"{  \"template\" : \"logstash-*\",  \"settings\" : {    \"index.refresh_interval\" : \"5s\"  },  \"mappings\" : {    \"_default_\" : {       \"_all\" : {\"enabled\" : true},       \"dynamic_templates\" : [ {         \"string_fields\" : {           \"match\" : \"*\",           \"match_mapping_type\" : \"string\",           \"mapping\" : {             \"type\" : \"string\", \"index\" : \"analyzed\", \"omit_norms\" : true,               \"fields\" : {                 \"raw\" : {\"type\": \"string\", \"index\" : \"not_analyzed\", \"ignore_above\" : 256}               }           }         }       } ],       \"properties\" : {         \"@version\": { \"type\": \"string\", \"index\": \"not_analyzed\" },         \"geoip\"  : {           \"type\" : \"object\",             \"dynamic\": true,             \"path\": \"full\",             \"properties\" : {               \"location\" : { \"type\" : \"geo_point\" }             }         }       }    }  }}", :level=>:info}
log4j, [2015-05-01T04:26:00.839]  INFO: org.elasticsearch.node: [logstash-8863ecbb442d-1-2010] version[1.1.1], pid[1], build[f1585f0/2014-04-16T14:27:12Z]
log4j, [2015-05-01T04:26:00.844]  INFO: org.elasticsearch.node: [logstash-8863ecbb442d-1-2010] initializing ...
log4j, [2015-05-01T04:26:00.909]  INFO: org.elasticsearch.plugins: [logstash-8863ecbb442d-1-2010] loaded [], sites []
log4j, [2015-05-01T04:26:09.768]  INFO: org.elasticsearch.node: [logstash-8863ecbb442d-1-2010] initialized
log4j, [2015-05-01T04:26:09.769]  INFO: org.elasticsearch.node: [logstash-8863ecbb442d-1-2010] starting ...
log4j, [2015-05-01T04:26:10.317]  INFO: org.elasticsearch.transport: [logstash-8863ecbb442d-1-2010] bound_address {inet[/0:0:0:0:0:0:0:0:9300]}, publish_address {inet[/172.17.0.216:9300]}
log4j, [2015-05-01T04:26:13.878]  INFO: org.elasticsearch.cluster.service: [logstash-8863ecbb442d-1-2010] detected_master [elasticsearch.domain.com][J2ijfzGrQYGuE4wLebF1iw][5835870895cd][inet[/172.17.0.206:9300]], added {[elasticsearch.domain.com][J2ijfzGrQYGuE4wLebF1iw][5835870895cd][inet[/172.17.0.206:9300]],}, reason: zen-disco-receive(from master [[elasticsearch.domain.com][J2ijfzGrQYGuE4wLebF1iw][5835870895cd][inet[/172.17.0.206:9300]]])
log4j, [2015-05-01T04:26:13.934]  INFO: org.elasticsearch.discovery: [logstash-8863ecbb442d-1-2010] elasticsearch/94uOOw1uT6mBRoSuGdnB8Q
log4j, [2015-05-01T04:26:13.941]  INFO: org.elasticsearch.node: [logstash-8863ecbb442d-1-2010] started
log4j, [2015-05-01T04:33:00.340]  WARN: org.elasticsearch.transport.netty: [logstash-8863ecbb442d-1-2010] exception caught on transport layer [[id: 0xaa5ddecf, /172.17.42.1:42493 => /172.17.0.216:9300]], closing connection
java.io.StreamCorruptedException: invalid internal transport message format
	at org.elasticsearch.transport.netty.SizeHeaderFrameDecoder.decode(SizeHeaderFrameDecoder.java:46)
	at org.elasticsearch.common.netty.handler.codec.frame.FrameDecoder.callDecode(FrameDecoder.java:425)
	at org.elasticsearch.common.netty.handler.codec.frame.FrameDecoder.messageReceived(FrameDecoder.java:303)
	at org.elasticsearch.common.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.elasticsearch.common.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.elasticsearch.common.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.common.netty.OpenChannelsHandler.handleUpstream(OpenChannelsHandler.java:74)
	at org.elasticsearch.common.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.elasticsearch.common.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:559)
	at org.elasticsearch.common.netty.channel.Channels.fireMessageReceived(Channels.java:268)
	at org.elasticsearch.common.netty.channel.Channels.fireMessageReceived(Channels.java:255)
	at org.elasticsearch.common.netty.channel.socket.nio.NioWorker.read(NioWorker.java:88)
	at org.elasticsearch.common.netty.channel.socket.nio.AbstractNioWorker.process(AbstractNioWorker.java:108)
	at org.elasticsearch.common.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:318)
	at org.elasticsearch.common.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:89)
	at org.elasticsearch.common.netty.channel.socket.nio.NioWorker.run(NioWorker.java:178)
	at org.elasticsearch.common.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108)
	at org.elasticsearch.common.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
log4j, [2015-05-01T04:33:00.354]  WARN: org.elasticsearch.transport.netty: [logstash-8863ecbb442d-1-2010] exception caught on transport layer [[id: 0xaa5ddecf, /172.17.42.1:42493 :> /172.17.0.216:9300]], closing connection
java.io.StreamCorruptedException: invalid internal transport message format
	at org.elasticsearch.transport.netty.SizeHeaderFrameDecoder.decode(SizeHeaderFrameDecoder.java:46)
	at org.elasticsearch.common.netty.handler.codec.frame.FrameDecoder.callDecode(FrameDecoder.java:425)
	at org.elasticsearch.common.netty.handler.codec.frame.FrameDecoder.cleanup(FrameDecoder.java:482)
	at org.elasticsearch.common.netty.handler.codec.frame.FrameDecoder.channelDisconnected(FrameDecoder.java:365)
	at org.elasticsearch.common.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:102)
	at org.elasticsearch.common.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.elasticsearch.common.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.common.netty.OpenChannelsHandler.handleUpstream(OpenChannelsHandler.java:74)
	at org.elasticsearch.common.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.elasticsearch.common.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:559)
	at org.elasticsearch.common.netty.channel.Channels.fireChannelDisconnected(Channels.java:396)
	at org.elasticsearch.common.netty.channel.socket.nio.AbstractNioWorker.close(AbstractNioWorker.java:360)
	at org.elasticsearch.common.netty.channel.socket.nio.NioServerSocketPipelineSink.handleAcceptedSocket(NioServerSocketPipelineSink.java:81)
	at org.elasticsearch.common.netty.channel.socket.nio.NioServerSocketPipelineSink.eventSunk(NioServerSocketPipelineSink.java:36)
	at org.elasticsearch.common.netty.channel.DefaultChannelPipeline.sendDownstream(DefaultChannelPipeline.java:574)
	at org.elasticsearch.common.netty.channel.Channels.close(Channels.java:812)
	at org.elasticsearch.common.netty.channel.AbstractChannel.close(AbstractChannel.java:197)
	at org.elasticsearch.transport.netty.NettyTransport.exceptionCaught(NettyTransport.java:523)
	at org.elasticsearch.transport.netty.MessageChannelHandler.exceptionCaught(MessageChannelHandler.java:229)
	at org.elasticsearch.common.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:112)
	at org.elasticsearch.common.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.elasticsearch.common.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.common.netty.handler.codec.frame.FrameDecoder.exceptionCaught(FrameDecoder.java:377)
	at org.elasticsearch.common.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:112)
	at org.elasticsearch.common.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.elasticsearch.common.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.common.netty.OpenChannelsHandler.handleUpstream(OpenChannelsHandler.java:74)
	at org.elasticsearch.common.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.elasticsearch.common.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:559)
	at org.elasticsearch.common.netty.channel.Channels.fireExceptionCaught(Channels.java:525)
	at org.elasticsearch.common.netty.channel.AbstractChannelSink.exceptionCaught(AbstractChannelSink.java:48)
	at org.elasticsearch.common.netty.channel.DefaultChannelPipeline.notifyHandlerException(DefaultChannelPipeline.java:658)
	at org.elasticsearch.common.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:566)
	at org.elasticsearch.common.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.common.netty.OpenChannelsHandler.handleUpstream(OpenChannelsHandler.java:74)
	at org.elasticsearch.common.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.elasticsearch.common.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:559)
	at org.elasticsearch.common.netty.channel.Channels.fireMessageReceived(Channels.java:268)
	at org.elasticsearch.common.netty.channel.Channels.fireMessageReceived(Channels.java:255)
	at org.elasticsearch.common.netty.channel.socket.nio.NioWorker.read(NioWorker.java:88)
	at org.elasticsearch.common.netty.channel.socket.nio.AbstractNioWorker.process(AbstractNioWorker.java:108)
	at org.elasticsearch.common.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:318)
	at org.elasticsearch.common.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:89)
	at org.elasticsearch.common.netty.channel.socket.nio.NioWorker.run(NioWorker.java:178)
	at org.elasticsearch.common.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108)
	at org.elasticsearch.common.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
log4j, [2015-05-01T11:50:47.081]  WARN: org.elasticsearch.transport.netty: [logstash-8863ecbb442d-1-2010] exception caught on transport layer [[id: 0x659b30b2, /0:0:0:0:0:0:0:1:50452 => /0:0:0:0:0:0:0:1:9300]], closing connection
java.io.StreamCorruptedException: invalid internal transport message format
	at org.elasticsearch.transport.netty.SizeHeaderFrameDecoder.decode(SizeHeaderFrameDecoder.java:46)
	at org.elasticsearch.common.netty.handler.codec.frame.FrameDecoder.callDecode(FrameDecoder.java:425)
	at org.elasticsearch.common.netty.handler.codec.frame.FrameDecoder.messageReceived(FrameDecoder.java:303)
	at org.elasticsearch.common.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:70)
	at org.elasticsearch.common.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.elasticsearch.common.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.common.netty.OpenChannelsHandler.handleUpstream(OpenChannelsHandler.java:74)
	at org.elasticsearch.common.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.elasticsearch.common.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:559)
	at org.elasticsearch.common.netty.channel.Channels.fireMessageReceived(Channels.java:268)
	at org.elasticsearch.common.netty.channel.Channels.fireMessageReceived(Channels.java:255)
	at org.elasticsearch.common.netty.channel.socket.nio.NioWorker.read(NioWorker.java:88)
	at org.elasticsearch.common.netty.channel.socket.nio.AbstractNioWorker.process(AbstractNioWorker.java:108)
	at org.elasticsearch.common.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:318)
	at org.elasticsearch.common.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:89)
	at org.elasticsearch.common.netty.channel.socket.nio.NioWorker.run(NioWorker.java:178)
	at org.elasticsearch.common.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108)
	at org.elasticsearch.common.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
log4j, [2015-05-01T11:50:47.085]  WARN: org.elasticsearch.transport.netty: [logstash-8863ecbb442d-1-2010] exception caught on transport layer [[id: 0x659b30b2, /0:0:0:0:0:0:0:1:50452 :> /0:0:0:0:0:0:0:1:9300]], closing connection
java.io.StreamCorruptedException: invalid internal transport message format
	at org.elasticsearch.transport.netty.SizeHeaderFrameDecoder.decode(SizeHeaderFrameDecoder.java:46)
	at org.elasticsearch.common.netty.handler.codec.frame.FrameDecoder.callDecode(FrameDecoder.java:425)
	at org.elasticsearch.common.netty.handler.codec.frame.FrameDecoder.cleanup(FrameDecoder.java:482)
	at org.elasticsearch.common.netty.handler.codec.frame.FrameDecoder.channelDisconnected(FrameDecoder.java:365)
	at org.elasticsearch.common.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:102)
	at org.elasticsearch.common.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.elasticsearch.common.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.common.netty.OpenChannelsHandler.handleUpstream(OpenChannelsHandler.java:74)
	at org.elasticsearch.common.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.elasticsearch.common.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:559)
	at org.elasticsearch.common.netty.channel.Channels.fireChannelDisconnected(Channels.java:396)
	at org.elasticsearch.common.netty.channel.socket.nio.AbstractNioWorker.close(AbstractNioWorker.java:360)
	at org.elasticsearch.common.netty.channel.socket.nio.NioServerSocketPipelineSink.handleAcceptedSocket(NioServerSocketPipelineSink.java:81)
	at org.elasticsearch.common.netty.channel.socket.nio.NioServerSocketPipelineSink.eventSunk(NioServerSocketPipelineSink.java:36)
	at org.elasticsearch.common.netty.channel.DefaultChannelPipeline.sendDownstream(DefaultChannelPipeline.java:574)
	at org.elasticsearch.common.netty.channel.Channels.close(Channels.java:812)
	at org.elasticsearch.common.netty.channel.AbstractChannel.close(AbstractChannel.java:197)
	at org.elasticsearch.transport.netty.NettyTransport.exceptionCaught(NettyTransport.java:523)
	at org.elasticsearch.transport.netty.MessageChannelHandler.exceptionCaught(MessageChannelHandler.java:229)
	at org.elasticsearch.common.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:112)
	at org.elasticsearch.common.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.elasticsearch.common.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.common.netty.handler.codec.frame.FrameDecoder.exceptionCaught(FrameDecoder.java:377)
	at org.elasticsearch.common.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:112)
	at org.elasticsearch.common.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.elasticsearch.common.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.common.netty.OpenChannelsHandler.handleUpstream(OpenChannelsHandler.java:74)
	at org.elasticsearch.common.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.elasticsearch.common.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:559)
	at org.elasticsearch.common.netty.channel.Channels.fireExceptionCaught(Channels.java:525)
	at org.elasticsearch.common.netty.channel.AbstractChannelSink.exceptionCaught(AbstractChannelSink.java:48)
	at org.elasticsearch.common.netty.channel.DefaultChannelPipeline.notifyHandlerException(DefaultChannelPipeline.java:658)
	at org.elasticsearch.common.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:566)
	at org.elasticsearch.common.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.elasticsearch.common.netty.OpenChannelsHandler.handleUpstream(OpenChannelsHandler.java:74)
	at org.elasticsearch.common.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:564)
	at org.elasticsearch.common.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:559)
	at org.elasticsearch.common.netty.channel.Channels.fireMessageReceived(Channels.java:268)
	at org.elasticsearch.common.netty.channel.Channels.fireMessageReceived(Channels.java:255)
	at org.elasticsearch.common.netty.channel.socket.nio.NioWorker.read(NioWorker.java:88)
	at org.elasticsearch.common.netty.channel.socket.nio.AbstractNioWorker.process(AbstractNioWorker.java:108)
	at org.elasticsearch.common.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:318)
	at org.elasticsearch.common.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:89)
	at org.elasticsearch.common.netty.channel.socket.nio.NioWorker.run(NioWorker.java:178)
	at org.elasticsearch.common.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108)
	at org.elasticsearch.common.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
log4j, [2015-05-01T12:09:24.537]  INFO: org.elasticsearch.node: [logstash-963f0d64dc4a-1-2010] version[1.1.1], pid[1], build[f1585f0/2014-04-16T14:27:12Z]
log4j, [2015-05-01T12:09:24.542]  INFO: org.elasticsearch.node: [logstash-963f0d64dc4a-1-2010] initializing ...
log4j, [2015-05-01T12:09:24.583]  INFO: org.elasticsearch.plugins: [logstash-963f0d64dc4a-1-2010] loaded [], sites []
log4j, [2015-05-01T12:09:37.060]  INFO: org.elasticsearch.node: [logstash-963f0d64dc4a-1-2010] initialized
log4j, [2015-05-01T12:09:37.063]  INFO: org.elasticsearch.node: [logstash-963f0d64dc4a-1-2010] starting ...
log4j, [2015-05-01T12:09:37.903]  INFO: org.elasticsearch.transport: [logstash-963f0d64dc4a-1-2010] bound_address {inet[/0:0:0:0:0:0:0:0:9300]}, publish_address {inet[/172.17.0.224:9300]}
log4j, [2015-05-01T12:09:41.477]  INFO: org.elasticsearch.cluster.service: [logstash-963f0d64dc4a-1-2010] detected_master [elasticsearch.domain.com][_Gyi5eemQq6jPqwAc6wUew][74e45ba04c59][inet[/172.17.0.219:9300]], added {[elasticsearch.domain.com][_Gyi5eemQq6jPqwAc6wUew][74e45ba04c59][inet[/172.17.0.219:9300]],}, reason: zen-disco-receive(from master [[elasticsearch.domain.com][_Gyi5eemQq6jPqwAc6wUew][74e45ba04c59][inet[/172.17.0.219:9300]]])
log4j, [2015-05-01T12:09:41.505]  INFO: org.elasticsearch.discovery: [logstash-963f0d64dc4a-1-2010] elasticsearch/XafMCvaZRtWLq0BXimaSqw
log4j, [2015-05-01T12:09:41.515]  INFO: org.elasticsearch.node: [logstash-963f0d64dc4a-1-2010] started
{:timestamp=>"2015-05-01T12:19:45.670000+0000", :message=>"Using milestone 2 input plugin 'redis'. This plugin should be stable, but if you see strange behavior, please let us know! For more information on plugin milestones, see http://logstash.net/docs/1.4.2/plugin-milestones", :level=>:warn}
{:timestamp=>"2015-05-01T12:19:46.110000+0000", :message=>"Unknown setting 'protocl' for elasticsearch", :level=>:error}
{:timestamp=>"2015-05-01T12:19:46.117000+0000", :message=>"Error: Something is wrong with your configuration."}
{:timestamp=>"2015-05-01T12:19:46.121000+0000", :message=>"You may be interested in the '--configtest' flag which you can\nuse to validate logstash's configuration before you choose\nto restart a running system."}
